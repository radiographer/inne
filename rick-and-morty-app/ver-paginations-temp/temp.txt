____________________________
z komponentu Pagination
____________________________
import React from "react";
const Pagination = ({ nextPage, prevPage, goToPage, pages }) => {
  let pageButtons = [];
  for (let i = 1; i <= pages; i++) {
    pageButtons.push(
      <button key={i} onClick={() => goToPage(i)}>
        {i}
      </button>
    );
  }
  return (
    <div>
      {prevPage && <button onClick={prevPage}>Previous</button>}
      {/* {pageButtons} */}
      {nextPage && <button onClick={nextPage}>Next</button>}
    </div>
  );
};
export default Pagination;



____________________________
z pliku App.js
____________________________
import "./App.css";
import React, { useState, useEffect } from "react";
import Character from "./components/Character";
import Pagination from "./components/Pagination";

function App(props) {
  const [loading, setLoading] = useState(true);
  const [characters, setCharacters] = useState([]);
  const [currentPageUrl, setCurrentPageUrl] = useState(
    "https://rickandmortyapi.com/api/character"
  );
  const [nextPageUrl, setNextPageUrl] = useState();
  const [prevPageUrl, setPrevPageUrl] = useState();
  const [pages, setPages] = useState();

  useEffect(() => {
    const url = currentPageUrl;
    setLoading(true);
    const fetchData = async () => {
      const res = await fetch(url);
      const data = await res.json();
      setCharacters(data.results);
      setLoading(false);
      setNextPageUrl(data.info.next);
      setPrevPageUrl(data.info.prev);
      setPages(data.info.pages);
    };
    fetchData();
  }, [currentPageUrl]);

  function nextPage() {
    setCurrentPageUrl(nextPageUrl);
  }
  function prevPage() {
    setCurrentPageUrl(prevPageUrl);
  }
  function goToPage(num) {
    setCurrentPageUrl(`https://rickandmortyapi.com/api/character?page=${num}`);
  }
  if (loading) return "Loading...";
  const charList = characters.map((char) => (
    <Character
      key={Math.floor(Math.random() * 10000)}
      name={char.name}
      img={char.image}
    />
  ));

  return (
    <div className="App">
      <Pagination
        nextPage={nextPageUrl ? nextPage : null}
        prevPage={prevPageUrl ? prevPage : null}
        goToPage={goToPage}
        pages={pages}
      />
      <div className="char-cards">{charList}</div>
      <Pagination
        nextPage={nextPageUrl ? nextPage : null}
        prevPage={prevPageUrl ? prevPage : null}
        goToPage={goToPage}
        pages={pages}
      />
    </div>
  );
}

export default App;


____________________________
sprawdzanie, ktora strona i wyswietlenie tekstu
____________________________
import "./App.css";
import React, { useState, useEffect } from "react";
import Character from "./components/Character";
import Pagination from "./components/Pagination";

function App(props) {
  const [loading, setLoading] = useState(true);
  const [characters, setCharacters] = useState([]);
  const [currentPageUrl, setCurrentPageUrl] = useState(
    "https://rickandmortyapi.com/api/character"
  );

  const [nextPageUrl, setNextPageUrl] = useState();
  const [prevPageUrl, setPrevPageUrl] = useState();
  const [pages, setPages] = useState();

  const [isFirstPage, setIsFirstPage] = useState(false);

  useEffect(() => {
    const url = currentPageUrl;
    setLoading(true);
    const fetchData = async () => {
      const res = await fetch(url);
      const data = await res.json();
      setCharacters(data.results);
      setLoading(false);
      setNextPageUrl(data.info.next);
      setPrevPageUrl(data.info.prev);
      setPages(data.info.pages);
    };
    fetchData();
  }, [currentPageUrl]);

  function nextPage() {
    setCurrentPageUrl(nextPageUrl);
    checkIsFirst();
  }
  function prevPage() {
    setCurrentPageUrl(prevPageUrl);
    checkIsFirst();
  }

  function checkIsFirst() {
    if (nextPageUrl === "https://rickandmortyapi.com/api/character?page=1") {
      setIsFirstPage(true);
    } else {
      setIsFirstPage(false);
    }
  }

  function goToPage(num) {
    setCurrentPageUrl(`https://rickandmortyapi.com/api/character?page=${num}`);
  }
  if (loading) return "Loading...";

  const charList = characters.map((char) => (
    <Character
      key={Math.floor(Math.random() * 10000)}
      name={char.name}
      img={char.image}
    />
  ));

  const Title = () => {
    return isFirstPage ? (
      <h1 class="title">Witamy! Lista postaci Rick and Morty</h1>
    ) : (
      <h1></h1>
    );
  };

  return (
    <div className="App">
      <Title />
      <Pagination
        nextPage={nextPageUrl ? nextPage : null}
        prevPage={prevPageUrl ? prevPage : null}
        goToPage={goToPage}
        pages={pages}
      />
      <div className="char-cards">{charList}</div>
    </div>
  );
}

export default App;